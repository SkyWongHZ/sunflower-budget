version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sunflower-budget-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - WORK_WEIXIN_WEBHOOK_KEY=${WORK_WEIXIN_WEBHOOK_KEY}
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
      - minio
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: sunflower-budget-nginx
    ports:
      - "8899:8899"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

  mongodb:
    image: mongo:6.0
    container_name: sunflower-budget-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=19931010
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - app-network
    command: mongod --replSet rs0 --bind_ip_all

  redis:
    image: redis:7-alpine
    container_name: sunflower-budget-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass 19931010
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: sunflower-budget-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=19931010
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mongodb_data:
  redis_data:
  minio_data:

networks:
  app-network:
    driver: bridge 